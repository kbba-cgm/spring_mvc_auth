<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />
	<context:component-scan
		base-package="com.spring.app" />
	<context:property-placeholder
		location="classpath:database.properties" />

	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean
				class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> <mvc:resources 
		mapping="/assets/**" location="/WEB-INF/assets/" /> -->

	<!-- INTERCEPTORS SETTING -->
	<!-- ADD ANY INTERCEPTORS <mvc:interceptors> <mvc:interceptor> <mvc:mapping 
		path="/auth/**" /> <bean class="cgmgl.springmvc.app.web.filter.AuthInterceptor" 
		/> </mvc:interceptor> </mvc:interceptors> -->

	<!-- MESSAGE SOURCE -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"> 
		<property name="basenames" value="classpath:messages" /> <property name="defaultEncoding" 
		value="UTF-8" /> </bean> -->


	<!-- DATASOURCE CONFIG -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- FLYWAY CONFIG -->
	<!-- <bean id="flywayConfig" class="org.flywaydb.core.api.configuration.ClassicConfiguration"> 
		<property name="baselineOnMigrate" value="true" /> <property name="locations" 
		value="classpath:db/migration" /> <property name="dataSource" ref="dataSource" 
		/> </bean> <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate"> 
		<constructor-arg ref="flywayConfig" /> </bean> -->

	<!-- HIBERNATE CONFIG -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan"
			value="com.spring.app.persistence.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop>
				<prop key="format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


	<!-- MAIL CONFIG -->
	<!-- <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="username" value="${mail.username}" /> <property name="password" 
		value="${mail.password}" /> <property name="javaMailProperties"> <props> 
		<prop key="mail.transport.protocol">${mail.protocol}</prop> <prop key="mail.smtp.host">${mail.host}</prop> 
		<prop key="mail.smtp.port">${mail.port}</prop> <prop key="mail.smtp.auth">true</prop> 
		<prop key="mail.smtp.starttls.enable">true</prop> </props> </property> </bean> -->

	<bean id="bCryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>

	<bean id="NoOpEncoder"
		class="org.springframework.security.crypto.password.NoOpPasswordEncoder" />

	<bean id="myUserDetailService"
		class="com.spring.app.bl.service.auth.myUserDetailService" />

</beans>
